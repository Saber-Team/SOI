var jquery={};
(function(global,undefined){"use strict";var OP=Object.prototype,AP=Array.prototype,native_forEach=AP.forEach,native_map=AP.map,hasOwn=OP.hasOwnProperty,toString=OP.toString;var break_obj={};function noop(){}function map(arr,fn,opt_context){var ret=[];if(native_map&&arr.map===native_map){ret=arr.map(fn,opt_context)}else if(arr.length===+arr.length){for(var i=0;i<arr.length;++i){ret.push(fn.call(opt_context||null,arr[i],i,arr))}}return ret}function forEach(arr,fn,opt_context){if(native_forEach&&arr.forEach===native_forEach){arr.forEach(fn,opt_context)}else if(arr.length===+arr.length){for(var i=0,length=arr.length;i<length;i++){if(fn.call(opt_context,arr[i],i,arr)===break_obj){break}}}}function indexOf(arr,tar){for(var i=0;i<arr.length;++i){if(arr[i]===tar){return i}}return-1}var typeMap={"[object Object]":"object","[object Array]":"array","[object Function]":"function","[object RegExp]":"regexp","[object String]":"string","[object Number]":"number"};function typeOf(obj){return typeMap[toString.call(obj)]}function isNull(obj){return obj===void 0||obj===null}var doc=document,head=doc.head||doc.getElementsByTagName("head")[0],$base=doc.getElementsByTagName("base")[0];if($base){head=$base.parentNode}var currentAddingScript,useInteractive="readyState"in doc.createElement("script"),interactiveScript;function fetch(url,name){var script=doc.createElement("script");script.charset="utf-8";script.async=true;script.kernel_name=name;script.onreadystatechange=script.onload=script.onerror=function(){script.onreadystatschange=script.onload=script.onerror=null;interactiveScript=null;if(!script.readyState||/complete/.test(script.readyState)){head.removeChild(script)}};script.src=url;currentAddingScript=script;if($base){head.insertBefore(script,$base)}else{head.appendChild(script)}currentAddingScript=null}function scripts(){return doc.getElementsByTagName("script")}function getCurrentScript(){return doc.currentScript||currentAddingScript||function(){var _scripts;if(useInteractive){if(interactiveScript&&interactiveScript.readyState==="interactive"){return interactiveScript}_scripts=scripts();forEach(_scripts,function(script){if(script.readyState==="interactive"){interactiveScript=script;return break_obj}});return interactiveScript}}()||function(){var ret=null;var stack;try{throw new Error}catch(e){stack=e.stack}if(!stack){return ret}var e=stack.indexOf(" at ")!==-1?" at ":"@";var index=stack.indexOf(".async");if(index>-1){stack=stack.substring(index+7);stack=stack.split(e)[1];stack=stack.replace(/^([^\(]*\()/,"")}else{while(stack.indexOf(e)!==-1){stack=stack.substring(stack.indexOf(e)+e.length)}}stack=stack.substring(0,stack.indexOf(".js")+3);stack=stack.replace(/^([^\(]*\()/,"");var _scripts=scripts();forEach(_scripts,function(script){var path=getAbsPathOfScript(script);if(path===stack){ret=script;return break_obj}});return ret}()}function getAbsPathOfScript(script){return script.hasAttribute?script.src:script.getAttribute("src",4)}function getCurrentPath(){var node=getCurrentScript();return node?getAbsPathOfScript(node):null}var dirRegExp=/\/$/g,fileExtRegExp=/\.(js|css|tpl|txt)$/g;var loc=global.location;function normalize(p){p=p.replace(/(\/)+/g,"/");p=resolveDot(p);return p}function resolveDot(p){p=p.split("/");for(var i=0;i<p.length;++i){if(p[i]==="."){p.splice(i,1);--i}else if(p[i]===".."&&i>0&&p[i-1]!==".."){p.splice(i-1,2);i-=2}}return p.join("/")}function getPageDir(){return dirname(loc.href)}function isTopLevel(p){return isRelative(p)&&p.charAt(0)!=="."}function isAbsolute(p){return/:\/\//.test(p)||/^\//.test(p)}function isRelative(p){return!isAbsolute(p)&&(/^(\.){1,2}\//.test(p)||p.charAt(0)!=="/")}function resolveId(id,base){if(id==="require"||id==="module"||id==="exports"){return id}if(isTopLevel(id)){id=parsePaths(id);id=parsePackages(id);base=null}id=normalize(id);var conjuction=id.charAt(0)==="/"?"":"/";var url=(base?dirname(base):getPageDir())+conjuction+id;if(!fileExtRegExp.test(url)){url+=".js"}url=resolveDot(url);return url}function dirname(p){if(dirRegExp.test(p)){return p.slice(0,-1)}p=p.split("/");p.pop();return p.join("/")}function parsePaths(p){var ret=[];if(kerneljs.paths){var part=p;var parts=p.split("/");while(!(part in kerneljs.paths)&&parts.length){ret.unshift(parts.pop());part=parts.join("/")}p=kerneljs.paths[part]?kerneljs.paths[part]:part}return p+ret.join("/")}function parsePackages(p){var pkgs=kerneljs.packages,fpath="";if(pkgs&&pkgs.length>0){forEach(pkgs,function(pkg){if(p.indexOf(pkg.name)===0){if(p.length===pkg.name.length){fpath="/"+(pkg.main?pkg.main:"main")}p=p.replace(pkg.name,pkg.location||pkg.name)+fpath;return break_obj}})}return p}function Module(obj){this.uid=obj.uid;this.id=obj.id||null;this.url=obj.url;this.deps=obj.deps||[];this.depMods=new Array(this.deps.length);this.status=obj.status||Module.STATUS.init;this.factory=obj.factory||noop;this.exports={}}Module.STATUS={init:0,loaded:1,fetching:2,complete:3};Module.prototype.setStatus=function(status){if(status<0||status>4){throw"Status "+status+" is now allowed."}else{this.status=status;switch(status){case 0:break;case 2:kerneljs.trigger(kerneljs.events.startFetch,[this]);break;case 3:kerneljs.trigger(kerneljs.events.complete,[this]);break}}};Module.prototype.ready=function(mod){var inPathConfig;if(mod.url){if(kerneljs.paths&&kerneljs.paths[this.id]){inPathConfig=true}for(var i=0;i<this.deps.length;++i){var path=resolveId(this.deps[i],inPathConfig?loc.href:this.url);if(path===mod.url){this.depMods[i]=mod.exports;break}}}if(this.checkAllDepsOK()){notify(this)}};Module.prototype.checkAllDepsOK=function(){var ok=true;for(var i=0;i<this.depMods.length;++i){if(isNull(this.depMods[i])){ok=false;break}}return ok};var cjsRequireRegExp=/\brequire\s*\(\s*(["'])([^'"\s]+)\1\s*\)/g,commentRegExp=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm;var empty_mod={id:null,uid:null,url:null,status:null,exports:{}};var SAME_ID_MSG="more then one module defined with the same id: %s";function exist_id_error(id){throw SAME_ID_MSG.replace("%s",id)}function define(id,deps,factory){var mod,cache=kerneljs.cache,uid=kerneljs.uidprefix+kerneljs.uid++;var base=getCurrentPath();if(typeOf(id)!=="string"){factory=deps;deps=id;id=null}if(typeOf(deps)!=="array"){factory=deps;deps=null}if(id){if(cache.id2path[id]&&kerneljs.debug){kerneljs.trigger(kerneljs.events.ERROR,[SAME_ID_MSG.replace("%s",id),base]);return exist_id_error(id)}cache.id2path[id]=base;cache.mods[id]=empty_mod}if(cache.path2uid[base]){cache.path2uid[base].push(uid)}else{cache.path2uid[base]=[uid]}mod=cache.mods[uid]=empty_mod;if(!deps&&typeOf(factory)==="function"){deps=[];if(factory.length){factory.toString().replace(commentRegExp,"").replace(cjsRequireRegExp,function(match,quote,dep){deps.push(dep)});deps=(factory.length===1?["require"]:["require","exports","module"]).concat(deps)}}mod=cache.mods[uid]=new Module({uid:uid,id:id,url:base,deps:deps,factory:factory,status:Module.STATUS.init});kerneljs.trigger(kerneljs.events.create,[mod]);var name=getCurrentScript().kernel_name;if(name&&isTopLevel(name)&&!mod.id){mod.id=name}if(mod.deps&&mod.deps.length>0){mod.deps=map(mod.deps,function(dep,index){if(dep==="exports"||dep==="module"){mod.cjsWrapper=true}var inject=resolve(dep,mod);if(inject){mod.depMods[index]=inject}return dep})}load(mod)}function load(mod){var cache=kerneljs.cache;var count=mod.deps.length;var inPathConfig=kerneljs.paths&&kerneljs.paths[mod.id]?true:false;var currentPath=inPathConfig?loc.href:getCurrentPath();fetchingList.add(mod);if(!cache.mods[mod.uid]){cache.mods[mod.uid]=empty_mod}mod.setStatus(Module.STATUS.fetching);forEach(mod.deps,function(name,index){if(mod.depMods[index]){--count;return}var path=resolveId(name,currentPath);var uid=cache.path2uid[path];if(uid&&cache.mods[uid[0]]&&(cache.mods[uid[0]].status===Module.STATUS.complete||checkCycle(path,mod))){--count;mod.depMods[index]=cache.mods[uid[0]].exports}else{if(!dependencyList[path]){dependencyList[path]=[mod]}else if(indexOf(dependencyList[path],mod)<0){dependencyList[path].push(mod)}if(!sendingList[path]){sendingList[path]=true;fetch(path,name)}}});if(count===0){notify(mod)}}define.amd={creator:"AceMood",email:"zmike86@gmail.com"};function require(deps,cb){if(typeOf(deps)==="object"&&!cb){kerneljs.config(deps);return null}if(typeOf(deps)==="array"&&deps.length===0){if(typeOf(cb)==="function"){return cb()}else{return cb}}if(typeOf(deps)==="string"){deps=[deps]}var uid,_currentPath=getCurrentPath();if(cb){uid=kerneljs.uidprefix+kerneljs.uid++;var mod=new Module({uid:uid,id:null,url:_currentPath,deps:deps,factory:cb,status:Module.STATUS.init});mod.depMods=map(deps,function(dep){var path=resolveId(dep,_currentPath);return resolve(dep)||resolve(path)});load(mod);return null}else{var _dep=resolveId(deps[0],_currentPath);var _mod=resolve(deps[0]);if(deps.length===1&&_mod){return _mod}else{uid=kerneljs.cache.path2uid[_dep][0];return kerneljs.cache.mods[uid].exports||null}}}function notify(mod){fetchingList.remove(mod);if(!mod.cjsWrapper){mod.exports=typeOf(mod.factory)==="function"?mod.factory.apply(null,mod.depMods):mod.factory}else{mod.factory.apply(null,mod.depMods)}if(isNull(mod.exports)){mod.exports={}}mod.setStatus(Module.STATUS.complete);kerneljs.cache.mods[mod.uid]=mod;if(mod.id){kerneljs.cache.mods[mod.id]=mod}var depandants=dependencyList[mod.url];if(depandants){delete dependencyList[mod.url];forEach(depandants,function(dependant){if(dependant.ready&&dependant.status===Module.STATUS.fetching){dependant.ready(mod)}})}}function resolve(name,mod){if(kerneljs.cache.mods[name]){var currentPath=getCurrentPath(),path=resolveId(name,currentPath);if(kerneljs.cache.mods[name].status===Module.STATUS.complete||checkCycle(path,mod)){return kerneljs.cache.mods[name].exports}}if(name==="require"){return require}else if(name==="module"){return mod}else if(name==="exports"){return mod&&mod.exports}return null}function checkCycle(path,mod){var ret=false;var uid=kerneljs.cache.path2uid[path];var m;if(uid&&(m=kerneljs.cache.mods[uid[0]])){if(indexOf(dependencyList[mod.url],m)>=0){ret=true}}return ret}require.toUrl=function(id){return resolveId(id)};require.async=function(id,callback){require([id],callback)};var kerneljs={};kerneljs.uid=0;kerneljs.uidprefix="AceMood@kernel_";var fetchingList={mods:{},add:function(mod){if(this.mods[mod.uid]){kerneljs.trigger(kerneljs.events.error,["current mod with uid: "+mod.uid+" and file path: "+mod.url+" is fetching now"])}this.mods[mod.uid]=mod},clear:function(){this.mods={}},remove:function(mod){if(this.mods[mod.uid]){this.mods[mod.uid]=null;delete this.mods[mod.uid]}}};var dependencyList={};var sendingList={};kerneljs.config=function(obj){if(typeOf(obj)!=="object"){throw"config object must an object"}var key,k;for(key in obj){if(hasOwn.call(obj,key)){if(kerneljs[key]){for(k in obj[key]){kerneljs[key][k]=obj[key][k]}}else{kerneljs[key]=obj[key]}}}};kerneljs.cache={mods:{},id2path:{},path2uid:{},events:{}};kerneljs.config({baseUrl:"",debug:true,paths:{}});kerneljs.reset=function(){this.cache.mods={};this.cache.id2path={};this.cache.path2uid={}};kerneljs.replace=function(endpoint){return endpoint};kerneljs.url=function(url){return url};global.require=global._req=require;global.define=global._def=define;global.kerneljs=kerneljs;kerneljs.events={create:"create",startFetch:"start:fetch",endFetch:"end:fetch",complete:"complete",error:"error"};kerneljs.on=function(eventName,handler,context){if(!this.cache.events[eventName]){this.cache.events[eventName]=[]}this.cache.events[eventName].push({handler:handler,context:context})};kerneljs.trigger=function(eventName,args){var arr=this.cache.events[eventName];if(arr){forEach(arr,function(obj){obj.handler.apply(obj.context,args)})}}})(this);